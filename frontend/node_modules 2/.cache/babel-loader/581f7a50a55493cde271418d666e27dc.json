{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientIndexSubcomp/PatientPopUp.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PlaceholderBrainProfile from '../../../images/placeholder_rotating_brain.gif';\nimport TaskTimeline from './taskTimeline';\nimport '../../../css/patient_popup.scss';\n\nclass PatientPopUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.history.push(\"/show/\".concat(this.props.patient._id));\n  }\n\n  getSimpleMontage() {\n    let elecs = {};\n    this.props.patient.imaging.electrodeMontage.forEach(electrode => {\n      if (!elecs[electrode.electrodeRegion]) elecs[electrode.electrodeRegion] = 0;\n      elecs[electrode.electrodeRegion]++;\n    });\n    return elecs;\n  }\n\n  render() {\n    let elecs = {};\n\n    if (this.props.patient) {\n      elecs = this.getSimpleMontage();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"patient-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.props.closeQuickView,\n      className: \"patient-popup__close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"h1\", {\n      className: \"patient-popup__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.patient.researchId), React.createElement(\"div\", {\n      className: \"brain-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"brain-quick-show\",\n      src: PlaceholderBrainProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"patient-popup__montage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"add-green scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Electrode Montage\"), Object.keys(elecs).map((region, idx) => React.createElement(\"li\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"scores-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\".concat(region, \":\")), \" \", \"\".concat(elecs[region])))))), React.createElement(\"div\", {\n      className: \"pop-up-bottom-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"patient-popup__medical-history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scores add-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Neuropsych Scores\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      className: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"BDI:\"), \" \", this.props.patient.medicalHistory.BDI), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"BAI:\"), \" \", this.props.patient.medicalHistory.BAI)), React.createElement(\"div\", {\n      className: \"patient-popup__studies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scores add-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Enrolled Studies\"), this.props.patient.studies.map(study => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, study)))), React.createElement(\"h1\", {\n      className: \"patient-popup__timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Patient Timeline\"), React.createElement(TaskTimeline, {\n      patient: this.props.patient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: this.handleClick,\n      className: \"see-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"...View More\"));\n  }\n\n}\n\nexport default withRouter(PatientPopUp);","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientIndexSubcomp/PatientPopUp.jsx"],"names":["React","withRouter","PlaceholderBrainProfile","TaskTimeline","PatientPopUp","Component","constructor","props","handleClick","bind","history","push","patient","_id","getSimpleMontage","elecs","imaging","electrodeMontage","forEach","electrode","electrodeRegion","render","closeQuickView","researchId","Object","keys","map","region","idx","medicalHistory","BDI","BAI","studies","study"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport PlaceholderBrainProfile from '../../../images/placeholder_rotating_brain.gif'\nimport TaskTimeline from './taskTimeline'\nimport '../../../css/patient_popup.scss';\n\n\n\nclass PatientPopUp extends React.Component{\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.history.push(`/show/${this.props.patient._id}`)\n    }\n\n    getSimpleMontage(){\n        let elecs = {}\n        this.props.patient.imaging.electrodeMontage.forEach(electrode => {\n            if (!elecs[electrode.electrodeRegion]) elecs[electrode.electrodeRegion] = 0;\n            elecs[electrode.electrodeRegion] ++;\n        })\n        return elecs\n        \n    }\n\n    render(){\n        let elecs = {}\n        if (this.props.patient){\n           elecs = this.getSimpleMontage()\n        }\n        return(\n            <div className=\"patient-popup\">\n                <div onClick={this.props.closeQuickView} className=\"patient-popup__close\">X</div>\n                <h1 className=\"patient-popup__header\">\n                    {this.props.patient.researchId}\n                </h1>\n                \n                <div className=\"brain-container\">\n                    <img className='brain-quick-show' src={PlaceholderBrainProfile} />\n                    <div>\n                        <ul className=\"patient-popup__montage\">\n                            <p className=\"add-green scores\">Electrode Montage</p>\n                            {Object.keys(elecs).map((region, idx) => \n                                    <li key={idx}>\n                                        <p className=\"scores-light\">{`${region}:`}</p> {`${elecs[region]}`}\n                                    </li>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n                \n                <div className=\"pop-up-bottom-container\">\n                    <div className=\"patient-popup__medical-history\">\n                        <div className=\"scores add-green\">Neuropsych Scores</div>\n                        <div> <p className=\"scores\">BDI:</p> {this.props.patient.medicalHistory.BDI}</div>\n                        <div><p className=\"scores\">BAI:</p> {this.props.patient.medicalHistory.BAI}</div>\n                    </div>\n\n                    <div className=\"patient-popup__studies\">\n                        <div className=\"scores add-green\">Enrolled Studies</div>\n                        {this.props.patient.studies.map(study => \n                            <div>{study}</div>)}                   \n                    </div>\n                </div>\n                \n                <h1 className=\"patient-popup__timeline\">Patient Timeline</h1>\n                <TaskTimeline patient={this.props.patient}/>\n\n                <div onClick={this.handleClick}className=\"see-details\">...View More</div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PatientPopUp);"]},"metadata":{},"sourceType":"module"}