{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport axios from 'axios';\nimport { createPatient, getPatient, getPatients } from './util/patient_api_util';\nimport { logout, loginUser, registerUser } from './actions/session_actions';\nimport { fetchUsers, fetchUser, deleteUser, updateUser } from \"./actions/user_actions\";\nimport { createTask, getTask, updateTask } from './util/task_api_util';\nimport { verifyToken } from \"./util/user_api_util\";\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n  store = configureStore({});\n  window.getState = store.getState;\n  window.dispatch = store.dispatch;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = {\n      session: {\n        isAuthenticated: true,\n        currentUserId: decodedUser._id\n      }\n    };\n    store = configureStore(preloadedState);\n    const currentTime = Date.now() / 1000; // if (decodedUser.exp < currentTime) {\n    // store.dispatch(logout());\n    // window.location.href = '/login';\n    // }\n  } else {\n    store = configureStore({});\n  }\n\n  const root = document.getElementById('root');\n  ReactDOM.render(React.createElement(Root, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), root);\n  window.getState = store.getState;\n  window.dispatch = store.dispatch;\n  window.logout = logout;\n  window.fetchUsers = fetchUsers;\n  window.fetchUser = fetchUser;\n  window.deleteUser = deleteUser; // window.updateUser = updateUser;\n\n  window.verifyToken = verifyToken;\n  window.createPatient = createPatient;\n  window.getPatient = getPatient;\n  window.getPatients = getPatients;\n  window.createTask = createTask;\n  window.getTask = getTask;\n  window.updateTask = updateTask;\n});","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/index.js"],"names":["React","ReactDOM","Root","configureStore","jwt_decode","setAuthToken","axios","createPatient","getPatient","getPatients","logout","loginUser","registerUser","fetchUsers","fetchUser","deleteUser","updateUser","createTask","getTask","updateTask","verifyToken","document","addEventListener","store","window","getState","dispatch","localStorage","jwtToken","decodedUser","preloadedState","session","isAuthenticated","currentUserId","_id","currentTime","Date","now","root","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,WAApC,QAAuD,yBAAvD;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,YAA5B,QAAgD,2BAAhD;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA4D,wBAA5D;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,UAA9B,QAAgD,sBAAhD;AAEA,SAAQC,WAAR,QAA0B,sBAA1B;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAChD,MAAIC,KAAJ;AACAA,EAAAA,KAAK,GAAGpB,cAAc,CAAC,EAAD,CAAtB;AACAqB,EAAAA,MAAM,CAACC,QAAP,GAAkBF,KAAK,CAACE,QAAxB;AACAD,EAAAA,MAAM,CAACE,QAAP,GAAkBH,KAAK,CAACG,QAAxB;;AACA,MAAIC,YAAY,CAACC,QAAjB,EAA2B;AACvBvB,IAAAA,YAAY,CAACsB,YAAY,CAACC,QAAd,CAAZ;AACA,UAAMC,WAAW,GAAGzB,UAAU,CAACuB,YAAY,CAACC,QAAd,CAA9B;AACA,UAAME,cAAc,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,eAAe,EAAE,IAAnB;AAAyBC,QAAAA,aAAa,EAAEJ,WAAW,CAACK;AAApD;AAAX,KAAvB;AACAX,IAAAA,KAAK,GAAGpB,cAAc,CAAC2B,cAAD,CAAtB;AACA,UAAMK,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CALuB,CAMvB;AACI;AACA;AACJ;AACH,GAVD,MAUO;AACHd,IAAAA,KAAK,GAAGpB,cAAc,CAAC,EAAD,CAAtB;AACH;;AACD,QAAMmC,IAAI,GAAGjB,QAAQ,CAACkB,cAAT,CAAwB,MAAxB,CAAb;AAEAtC,EAAAA,QAAQ,CAACuC,MAAT,CAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAuCe,IAAvC;AAEAd,EAAAA,MAAM,CAACC,QAAP,GAAkBF,KAAK,CAACE,QAAxB;AACAD,EAAAA,MAAM,CAACE,QAAP,GAAkBH,KAAK,CAACG,QAAxB;AAEAF,EAAAA,MAAM,CAACd,MAAP,GAAgBA,MAAhB;AAEAc,EAAAA,MAAM,CAACX,UAAP,GAAoBA,UAApB;AACAW,EAAAA,MAAM,CAACV,SAAP,GAAmBA,SAAnB;AACAU,EAAAA,MAAM,CAACT,UAAP,GAAoBA,UAApB,CA7BgD,CA8BhD;;AACAS,EAAAA,MAAM,CAACJ,WAAP,GAAqBA,WAArB;AAGAI,EAAAA,MAAM,CAACjB,aAAP,GAAuBA,aAAvB;AACAiB,EAAAA,MAAM,CAAChB,UAAP,GAAoBA,UAApB;AACAgB,EAAAA,MAAM,CAACf,WAAP,GAAqBA,WAArB;AAEAe,EAAAA,MAAM,CAACP,UAAP,GAAoBA,UAApB;AACAO,EAAAA,MAAM,CAACN,OAAP,GAAiBA,OAAjB;AACAM,EAAAA,MAAM,CAACL,UAAP,GAAoBA,UAApB;AAEH,CA1CD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport axios from 'axios';\nimport { createPatient, getPatient, getPatients } from './util/patient_api_util';\nimport { logout, loginUser, registerUser } from './actions/session_actions';\nimport {fetchUsers, fetchUser, deleteUser, updateUser} from \"./actions/user_actions\";\nimport { createTask, getTask, updateTask } from './util/task_api_util';\n\nimport {verifyToken} from \"./util/user_api_util\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    let store;\n    store = configureStore({})\n    window.getState = store.getState;\n    window.dispatch = store.dispatch\n    if (localStorage.jwtToken) {\n        setAuthToken(localStorage.jwtToken);\n        const decodedUser = jwt_decode(localStorage.jwtToken);\n        const preloadedState = { session: { isAuthenticated: true, currentUserId: decodedUser._id } };\n        store = configureStore(preloadedState);\n        const currentTime = Date.now() / 1000;\n        // if (decodedUser.exp < currentTime) {\n            // store.dispatch(logout());\n            // window.location.href = '/login';\n        // }\n    } else {\n        store = configureStore({});\n    }\n    const root = document.getElementById('root');\n\n    ReactDOM.render(<Root store={store}/>, root);\n\n    window.getState = store.getState;\n    window.dispatch = store.dispatch;\n\n    window.logout = logout;\n\n    window.fetchUsers = fetchUsers;\n    window.fetchUser = fetchUser;\n    window.deleteUser = deleteUser;\n    // window.updateUser = updateUser;\n    window.verifyToken = verifyToken;\n\n\n    window.createPatient = createPatient;\n    window.getPatient = getPatient;\n    window.getPatients = getPatients;\n\n    window.createTask = createTask;\n    window.getTask = getTask;\n    window.updateTask = updateTask;\n\n});\n"]},"metadata":{},"sourceType":"module"}