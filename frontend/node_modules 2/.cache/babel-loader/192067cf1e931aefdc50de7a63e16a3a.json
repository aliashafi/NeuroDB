{"ast":null,"code":"//sort by date \nexport const sortByDate = (date1, date2) => {\n  let d1 = new Date(date1.dateOfSurgery);\n  let d2 = new Date(date2.dateOfSurgery);\n  if (d1 < d2) return 1;\n  if (d2 < d1) return -1;\n  return 0;\n};\nexport const sortByAge = (age1, age2) => {\n  let a1 = age1.demographics.age;\n  let a2 = age2.demographics.age;\n  if (a1 < a2) return 1;\n  if (a2 < a1) return -1;\n  return 0;\n};\nexport const sortByResearchID = (id1, id2) => {\n  let r1 = id1.researchId.slice(2);\n  let r2 = id2.researchId.slice(2);\n  r1 = parseInt(r1);\n  r2 = parseInt(r2);\n  if (r1 < r2) return 1;\n  if (r2 < r1) return -1;\n  return 0;\n};","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/util/sort_api_util.js"],"names":["sortByDate","date1","date2","d1","Date","dateOfSurgery","d2","sortByAge","age1","age2","a1","demographics","age","a2","sortByResearchID","id1","id2","r1","researchId","slice","r2","parseInt"],"mappings":"AACA;AACA,OAAO,MAAMA,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,MAAIC,EAAE,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAACI,aAAf,CAAT;AACA,MAAIC,EAAE,GAAG,IAAIF,IAAJ,CAASF,KAAK,CAACG,aAAf,CAAT;AAEA,MAAIF,EAAE,GAAGG,EAAT,EAAa,OAAO,CAAP;AACb,MAAIA,EAAE,GAAGH,EAAT,EAAa,OAAO,CAAC,CAAR;AACb,SAAO,CAAP;AACH,CAPM;AASP,OAAO,MAAMI,SAAS,GAAE,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACpC,MAAIC,EAAE,GAAGF,IAAI,CAACG,YAAL,CAAkBC,GAA3B;AACA,MAAIC,EAAE,GAAGJ,IAAI,CAACE,YAAL,CAAkBC,GAA3B;AACA,MAAIF,EAAE,GAAGG,EAAT,EAAa,OAAO,CAAP;AACb,MAAIA,EAAE,GAAGH,EAAT,EAAa,OAAO,CAAC,CAAR;AACb,SAAO,CAAP;AACH,CANM;AAQP,OAAO,MAAMI,gBAAgB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1C,MAAIC,EAAE,GAAGF,GAAG,CAACG,UAAJ,CAAeC,KAAf,CAAqB,CAArB,CAAT;AACA,MAAIC,EAAE,GAAGJ,GAAG,CAACE,UAAJ,CAAeC,KAAf,CAAqB,CAArB,CAAT;AACAF,EAAAA,EAAE,GAAGI,QAAQ,CAACJ,EAAD,CAAb;AACAG,EAAAA,EAAE,GAAGC,QAAQ,CAACD,EAAD,CAAb;AAEA,MAAIH,EAAE,GAAGG,EAAT,EAAa,OAAO,CAAP;AACb,MAAIA,EAAE,GAAGH,EAAT,EAAa,OAAO,CAAC,CAAR;AACb,SAAO,CAAP;AACH,CATM","sourcesContent":["\n//sort by date \nexport const sortByDate = (date1, date2) => {\n    let d1 = new Date(date1.dateOfSurgery)\n    let d2 = new Date(date2.dateOfSurgery)\n\n    if (d1 < d2) return 1;\n    if (d2 < d1) return -1;\n    return 0;\n}\n\nexport const sortByAge= (age1, age2) => {\n    let a1 = age1.demographics.age\n    let a2 = age2.demographics.age\n    if (a1 < a2) return 1;\n    if (a2 < a1) return -1;\n    return 0;\n}\n\nexport const sortByResearchID = (id1, id2) => {\n    let r1 = id1.researchId.slice(2)\n    let r2 = id2.researchId.slice(2)\n    r1 = parseInt(r1)\n    r2 = parseInt(r2)\n\n    if (r1 < r2) return 1;\n    if (r2 < r1) return -1;\n    return 0;\n}"]},"metadata":{},"sourceType":"module"}