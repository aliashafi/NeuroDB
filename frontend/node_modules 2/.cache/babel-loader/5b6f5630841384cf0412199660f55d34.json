{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientCreate.jsx\";\nimport React from 'react';\nimport PatientShowSideNav from './PatientShowSubcomp/patient_show_side_nav';\nimport PatientCreateForm from './form/PatientCreateForm';\nimport '../../css/patient_show.scss';\nimport '../../css/_tackons.scss';\n\nclass PatientCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleCard: 'patient info'\n    };\n    this.handleVisibleCardChange = this.handleVisibleCardChange.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const navItem = document.querySelector(\"#side-nav-patient-info\");\n      navItem.classList.add('nav-selected');\n    }, 800);\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.visibleCared !== this.state.visibleCard) {\n      const navIdSuffix = this.state.visibleCard.split(' ').join('-');\n      const navItem = document.querySelector(\"#side-nav-\".concat(navIdSuffix));\n      const prevNavIdSuffix = prevState.visibleCard.split(' ').join('-');\n      const prevItem = document.querySelector(\"#side-nav-\".concat(prevNavIdSuffix));\n      navItem.classList.add('nav-selected');\n      prevItem.classList.remove('nav-selected');\n    }\n  }\n\n  handleVisibleCardChange(e, card) {\n    this.setState({\n      visibleCard: card\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"patient-show-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(PatientShowSideNav, {\n      handleVisibleCardChange: this.handleVisibleCardChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(PatientCreateForm, {\n      visibleCard: this.state.visibleCard,\n      processForm: this.props.processForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PatientCreate;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientCreate.jsx"],"names":["React","PatientShowSideNav","PatientCreateForm","PatientCreate","Component","constructor","props","state","visibleCard","handleVisibleCardChange","bind","componentDidMount","setTimeout","navItem","document","querySelector","classList","add","componentDidUpdate","prevProp","prevState","visibleCared","navIdSuffix","split","join","prevNavIdSuffix","prevItem","remove","e","card","setState","render","processForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAO,6BAAP;AACA,OAAO,yBAAP;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAIA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,0BAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AAEH,KAJS,EAIP,GAJO,CAAV;AAKH;;AAEDC,EAAAA,kBAAkB,CAACC,QAAD,EAAWC,SAAX,EAAsB;AACpC,QAAIA,SAAS,CAACC,YAAV,KAA2B,KAAKd,KAAL,CAAWC,WAA1C,EAAuD;AACnD,YAAMc,WAAW,GAAG,KAAKf,KAAL,CAAWC,WAAX,CAAuBe,KAAvB,CAA6B,GAA7B,EAAkCC,IAAlC,CAAuC,GAAvC,CAApB;AACA,YAAMX,OAAO,GAAGC,QAAQ,CAACC,aAAT,qBAAoCO,WAApC,EAAhB;AACA,YAAMG,eAAe,GAAGL,SAAS,CAACZ,WAAV,CAAsBe,KAAtB,CAA4B,GAA5B,EAAiCC,IAAjC,CAAsC,GAAtC,CAAxB;AACA,YAAME,QAAQ,GAAGZ,QAAQ,CAACC,aAAT,qBAAoCU,eAApC,EAAjB;AACAZ,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAS,MAAAA,QAAQ,CAACV,SAAT,CAAmBW,MAAnB,CAA0B,cAA1B;AACH;AACJ;;AAEDlB,EAAAA,uBAAuB,CAACmB,CAAD,EAAIC,IAAJ,EAAU;AAC7B,SAAKC,QAAL,CAAc;AAAEtB,MAAAA,WAAW,EAAEqB;AAAf,KAAd;AAEH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,uBAAuB,EAAE,KAAKtB,uBADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,iBAAD;AACI,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAD5B;AAEI,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAW0B,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAWH;;AA/CuC;;AAkD5C,eAAe7B,aAAf","sourcesContent":["import React from 'react';\nimport PatientShowSideNav from './PatientShowSubcomp/patient_show_side_nav';\nimport PatientCreateForm from './form/PatientCreateForm';\nimport '../../css/patient_show.scss';\nimport '../../css/_tackons.scss';\n\nclass PatientCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visibleCard: 'patient info',\n        };\n\n        this.handleVisibleCardChange = this.handleVisibleCardChange.bind(this);\n    }\n\n    componentDidMount(){\n        setTimeout(() => {\n            const navItem = document.querySelector(`#side-nav-patient-info`);\n            navItem.classList.add('nav-selected');\n\n        }, 800);\n    }\n\n    componentDidUpdate(prevProp, prevState) {\n        if (prevState.visibleCared !== this.state.visibleCard) {\n            const navIdSuffix = this.state.visibleCard.split(' ').join('-');\n            const navItem = document.querySelector(`#side-nav-${navIdSuffix}`);\n            const prevNavIdSuffix = prevState.visibleCard.split(' ').join('-');\n            const prevItem = document.querySelector(`#side-nav-${prevNavIdSuffix}`);\n            navItem.classList.add('nav-selected');\n            prevItem.classList.remove('nav-selected');\n        }\n    }\n\n    handleVisibleCardChange(e, card) {\n        this.setState({ visibleCard: card });\n\n    }\n\n    render(){\n        return (\n            <div className='patient-show-page-container'>\n                <PatientShowSideNav\n                    handleVisibleCardChange={this.handleVisibleCardChange} />\n                <PatientCreateForm \n                    visibleCard={this.state.visibleCard}\n                    processForm={this.props.processForm}\n                    />\n                \n            </div>\n        )\n    }\n}\n\nexport default PatientCreate;"]},"metadata":{},"sourceType":"module"}