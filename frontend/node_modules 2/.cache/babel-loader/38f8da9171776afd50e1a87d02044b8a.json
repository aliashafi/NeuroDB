{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/form/PatientCreateForm.jsx\";\nimport React from 'react';\nimport DemographicsForm from './DemographicsForm';\nimport MedicalHistoryForm from './MedicalHistoryForm';\nimport ImagingForm from './ImagingForm';\nimport MedicationForm from './MedicationForm';\nimport '../../../css/form.scss';\nimport '../../../css/button.scss';\n\nclass PatientCreateForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const patient = Object.assign({}, this.state);\n      delete patient[\"currentStep\"]; // const { researchId, dateOfSurgery, consent,\n      //     demographics, medication, medicalHistory,\n      //     imaging, relatedRecords\n      //      } = this.state\n\n      console.log(patient);\n      this.props.processForm(patient);\n    };\n\n    this.state = {\n      currentStep: this.props.visibleCard,\n      researchId: \"\",\n      dateOfSurgery: \"\",\n      consent: false,\n      demographics: {\n        birthDate: \"\",\n        age: \"\",\n        gender: \"\",\n        languageDominance: \"\",\n        dominantHand: \"\",\n        nativeLanguage: \"\"\n      },\n      medication: {\n        medicationName: \"\",\n        medicationPurpose: \"\"\n      },\n      medicalHistory: {\n        BDI: \"\",\n        BAI: \"\",\n        epilepsyDiagnosis: \"\",\n        previousResection: false,\n        neuroPace: false\n      },\n      imaging: {\n        electrodeMontage: []\n      },\n      relatedRecords: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.updateForm = this.updateForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // debugger\n    const _event$target = event.target,\n          id = _event$target.id,\n          name = _event$target.name,\n          value = _event$target.value;\n\n    if (id) {\n      let newSubState = this.state[id];\n      newSubState[name] = value;\n      this.setState({\n        [id]: newSubState\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  updateForm(key, value, parent) {\n    // debugger\n    if (!parent) {\n      this.setState({\n        [key]: value\n      });\n    } else {\n      let newSubState = this.state[parent];\n      newSubState[key] = value;\n      this.setState({\n        [parent]: newSubState\n      });\n    }\n  }\n\n  render() {\n    //    console.log(this.state.imaging)\n    return React.createElement(\"div\", {\n      className: \"patient-show-card std-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"card__form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(DemographicsForm, {\n      currentStep: this.props.visibleCard,\n      handleChange: this.handleChange,\n      demographics: this.state,\n      updateForm: this.updateForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(MedicalHistoryForm, {\n      currentStep: this.props.visibleCard,\n      handleChange: this.handleChange,\n      medicalHistory: this.state.medicalHistory,\n      updateForm: this.updateForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(ImagingForm, {\n      currentStep: this.props.visibleCard,\n      handleChange: this.handleChange,\n      imaging: this.state.imaging,\n      updateForm: this.updateForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(MedicationForm, {\n      currentStep: this.props.visibleCard,\n      handleChange: this.handleChange,\n      imaging: this.state.imaging,\n      updateForm: this.updateForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: this.handleSubmit,\n      id: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Add Patient\"))));\n  }\n\n}\n\n;\nexport default PatientCreateForm;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/form/PatientCreateForm.jsx"],"names":["React","DemographicsForm","MedicalHistoryForm","ImagingForm","MedicationForm","PatientCreateForm","Component","constructor","props","handleSubmit","event","preventDefault","patient","Object","assign","state","console","log","processForm","currentStep","visibleCard","researchId","dateOfSurgery","consent","demographics","birthDate","age","gender","languageDominance","dominantHand","nativeLanguage","medication","medicationName","medicationPurpose","medicalHistory","BDI","BAI","epilepsyDiagnosis","previousResection","neuroPace","imaging","electrodeMontage","relatedRecords","handleChange","bind","updateForm","target","id","name","value","newSubState","setState","key","parent","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DemographicsForm from './DemographicsForm';\nimport MedicalHistoryForm from './MedicalHistoryForm'\nimport ImagingForm from './ImagingForm'\nimport MedicationForm from './MedicationForm'\n\nimport '../../../css/form.scss'\nimport '../../../css/button.scss'\nclass PatientCreateForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentStep: this.props.visibleCard,\n            researchId: \"\",\n            dateOfSurgery: \"\",\n            consent: false,\n            demographics: {\n                birthDate: \"\",\n                age: \"\",\n                gender: \"\",\n                languageDominance: \"\",\n                dominantHand: \"\",\n                nativeLanguage: \"\"\n            },\n            medication: {\n                medicationName: \"\",\n                medicationPurpose: \"\"\n            },\n            medicalHistory: {\n                BDI: \"\",\n                BAI: \"\",\n                epilepsyDiagnosis: \"\",\n                previousResection: false,\n                neuroPace: false\n            },\n            imaging: {\n                electrodeMontage: []\n            },\n            relatedRecords: [],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        // debugger\n        const { id, name, value } = event.target\n        if (id){\n            let newSubState = this.state[id]\n            newSubState[name] = value\n            this.setState({ [id]: newSubState })\n\n        }else{\n            this.setState({\n                [name]: value\n            })  \n        }\n        \n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        const patient = Object.assign({}, this.state)\n        delete patient[\"currentStep\"]\n        // const { researchId, dateOfSurgery, consent,\n        //     demographics, medication, medicalHistory,\n        //     imaging, relatedRecords\n        //      } = this.state\n        console.log(patient)\n        this.props.processForm(patient)\n        \n    }\n\n    updateForm(key, value, parent){\n        // debugger\n        if (!parent){\n            this.setState({[key]: value});\n        }else{\n            let newSubState = this.state[parent]\n            newSubState[key] = value\n            this.setState({[parent]: newSubState});\n        }\n    }\n\n\n    render() {\n    //    console.log(this.state.imaging)\n        return (\n            <div className=\"patient-show-card std-shadow\">\n            <React.Fragment >\n\n                <form className=\"card__form\" onSubmit={this.handleSubmit}>\n                    <DemographicsForm \n                        currentStep={this.props.visibleCard}\n                        handleChange={this.handleChange}\n                        demographics={this.state}\n                        updateForm={this.updateForm}\n                    />\n\n                    <MedicalHistoryForm\n                        currentStep={this.props.visibleCard}\n                        handleChange={this.handleChange}\n                        medicalHistory={this.state.medicalHistory}\n                        updateForm={this.updateForm}\n                    />\n\n                    <ImagingForm\n                        currentStep={this.props.visibleCard}\n                        handleChange={this.handleChange}\n                        imaging={this.state.imaging}\n                        updateForm={this.updateForm}\n                    />\n\n                    <MedicationForm\n                        currentStep={this.props.visibleCard}\n                        handleChange={this.handleChange}\n                        imaging={this.state.imaging}\n                        updateForm={this.updateForm}\n                    />\n                    \n                    <div onClick={this.handleSubmit} id=\"button-submit\">Add Patient\n                        {/* <input type=\"submit\" value=\"Add Patient\"/> */}\n                    </div>\n                </form>\n\n            </React.Fragment>\n        </div>\n        )\n    }\n};\n\nexport default PatientCreateForm;"]},"metadata":{},"sourceType":"module"}