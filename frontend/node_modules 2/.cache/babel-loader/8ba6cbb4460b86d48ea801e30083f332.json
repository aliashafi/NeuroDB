{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientIndexSubcomp/PatientTable.jsx\";\nimport React from 'react';\nimport { sortByDate, sortByAge, sortByResearchID } from '../../../util/sort_api_util';\nimport { formatDate } from '../../../util/date_api_uil';\nimport '../../../css/patient_table.scss';\nimport '../../../css/_tackons.scss';\nimport PatientBasicSearchBar from './PatientBasicSearchBar';\n\nclass PatientTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: []\n    };\n    this.updateTablePatients = this.updateTablePatients.bind(this);\n  }\n\n  updateTablePatients(newPatients) {\n    this.setState({\n      patients: newPatients\n    });\n  }\n\n  render() {\n    let patients = this.state.patients.length === 0 ? this.props.patients : this.state.patients;\n    return React.createElement(\"div\", {\n      className: \"patient-table-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"patient-table-card patient-table-container std-shadow\",\n      id: \"no-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(PatientBasicSearchBar, {\n      toggleSlide: this.props.toggleSlide,\n      patients: this.props.patients,\n      updateTablePatients: this.updateTablePatients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"search-errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" \", this.props.notFound ? \"No patients found with those filters\" : \"\", \" \"), React.createElement(\"div\", {\n      className: \" patient-table-card patient-table-container std-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"patient-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"patient-table__headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Research ID\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Date of surgery\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Coverage (L/R)\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Native Language\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, patients.map((patient, index) => React.createElement(\"div\", {\n      onClick: () => this.props.handleQuickView(patient),\n      className: \"patient-table__rows clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, patient.researchId), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, formatDate(patient.dateOfSurgery)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, patient.demographics.age), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, patient.demographics.gender), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, patient.demographics.dominantHand), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, patient.demographics.nativeLanguage)))))));\n  }\n\n}\n\nexport default PatientTable;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Patients/PatientIndexSubcomp/PatientTable.jsx"],"names":["React","sortByDate","sortByAge","sortByResearchID","formatDate","PatientBasicSearchBar","PatientTable","Component","constructor","props","state","patients","updateTablePatients","bind","newPatients","setState","render","length","toggleSlide","notFound","map","patient","index","handleQuickView","researchId","dateOfSurgery","demographics","age","gender","dominantHand","nativeLanguage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { sortByDate, sortByAge, sortByResearchID} from '../../../util/sort_api_util';\nimport { formatDate } from '../../../util/date_api_uil';\nimport '../../../css/patient_table.scss'\nimport '../../../css/_tackons.scss'\nimport PatientBasicSearchBar from './PatientBasicSearchBar';\n\nclass PatientTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            patients: [],\n        }\n\n        this.updateTablePatients = this.updateTablePatients.bind(this);\n       \n    }\n\n    updateTablePatients(newPatients){\n        this.setState({patients: newPatients})\n    }    \n\n\n    render() {  \n              \n        let patients = this.state.patients.length === 0 ? this.props.patients : this.state.patients\n        \n        return (\n            <div className=\"patient-table-page\">\n                <div className=\"patient-table-card patient-table-container std-shadow\" id=\"no-padding\">\n\n                <PatientBasicSearchBar \n                    toggleSlide={this.props.toggleSlide}\n                    patients={this.props.patients} \n                    updateTablePatients={this.updateTablePatients}/>\n        \n                </div>\n\n                \n                <div className=\"search-errors\"> {this.props.notFound ? \"No patients found with those filters\" : \"\"} </div>\n                \n                <div className=\" patient-table-card patient-table-container std-shadow\">\n                <div className=\"patient-table\">\n\n                    <div className=\"patient-table__headers\">\n                            <div>Research ID</div>\n                            <div>Date of surgery</div>\n                            <div>Age</div>\n                            <div>Gender</div>\n                            <div>Coverage (L/R)</div>\n                            <div>Native Language</div>\n                    </div>\n\n                    <div>\n                        {patients.map((patient, index) => (\n                            <div \n                            onClick={() => this.props.handleQuickView(patient)}\n                            className=\"patient-table__rows clickable\">\n                                <div>{patient.researchId}</div>\n                                <div>{formatDate(patient.dateOfSurgery)}</div>\n                                <div>{patient.demographics.age}</div>\n                                <div>{patient.demographics.gender}</div>\n                                <div>{patient.demographics.dominantHand}</div>\n                                <div>{patient.demographics.nativeLanguage}</div>\n                            </div>\n\n                        ))}\n                    </div>\n                \n                </div>\n                </div>\n            </div>\n        )}\n}\n    \n\n\nexport default PatientTable;"]},"metadata":{},"sourceType":"module"}