{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { fetchUsers, verifyToken, updateCurrentUserPendings } from \"../../actions/user_actions\";\nimport UserShow from \"./user_show\";\n\nconst mapStateToProps = state => {\n  // users: state.entities.users,\n  // currentUser: state.entities.users[state.session.currentUser.id]\n  let currentUserId = state.session.currentUserId;\n  return {\n    users: state.entities.users,\n    currentUser: state.entities.users[currentUserId]\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchUsers: () => dispatch(fetchUsers()),\n  verifyToken: (token, adminId) => dispatch(verifyToken(token, adminId)) // updateCurrentUserPendings: (pendUserEmail, adminId) => dispatch(updateCurrentUserPendings(pendUserEmail, adminId))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserShow);","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/User/user_show_container.js"],"names":["connect","fetchUsers","verifyToken","updateCurrentUserPendings","UserShow","mapStateToProps","state","currentUserId","session","users","entities","currentUser","mapDispatchToProps","dispatch","token","adminId"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,yBAAjC,QAAiE,4BAAjE;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA;AACA,MAAIC,aAAa,GAAGD,KAAK,CAACE,OAAN,CAAcD,aAAlC;AACA,SAAO;AACHE,IAAAA,KAAK,EAAEH,KAAK,CAACI,QAAN,CAAeD,KADnB;AAEHE,IAAAA,WAAW,EAAEL,KAAK,CAACI,QAAN,CAAeD,KAAf,CAAqBF,aAArB;AAFV,GAAP;AAIH,CARD;;AAUA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACtCZ,EAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,EAAX,CADY;AAEtCC,EAAAA,WAAW,EAAE,CAACY,KAAD,EAAQC,OAAR,KAAoBF,QAAQ,CAACX,WAAW,CAACY,KAAD,EAAQC,OAAR,CAAZ,CAFH,CAGtC;;AAHsC,CAAf,CAA3B;;AAMA,eAAef,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import {connect} from \"react-redux\";\nimport {fetchUsers, verifyToken, updateCurrentUserPendings} from \"../../actions/user_actions\";\nimport UserShow from \"./user_show\";\n\n\nconst mapStateToProps = (state) => {\n    // users: state.entities.users,\n    // currentUser: state.entities.users[state.session.currentUser.id]\n    let currentUserId = state.session.currentUserId\n    return {   \n        users: state.entities.users,\n        currentUser: state.entities.users[currentUserId]\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUsers: () => dispatch(fetchUsers()),\n    verifyToken: (token, adminId) => dispatch(verifyToken(token, adminId)),\n    // updateCurrentUserPendings: (pendUserEmail, adminId) => dispatch(updateCurrentUserPendings(pendUserEmail, adminId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserShow)"]},"metadata":{},"sourceType":"module"}