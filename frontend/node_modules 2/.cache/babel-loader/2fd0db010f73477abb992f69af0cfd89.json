{"ast":null,"code":"var _jsxFileName = \"/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Dashboard/dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport '../../css/deethree.scss';\nimport DemographicsPercentBarGraph from './demographics_percent_bar_graph';\nimport PieChart from './pie_chart';\nimport RadarChart from './radar_chart';\nimport BarGraph from './bar_graph';\nimport { fetchPatient } from '../../actions/patient_actions';\n\nfunction Dashboard(props) {\n  useEffect(() => {\n    props.fetchPatients();\n  }, []);\n  const total = props.patients.length;\n\n  function calcPercent(arr, item) {\n    return arr.filter(el => el === item).length / total;\n  } // Data prep for native langugage pie chart\n\n\n  const languagesArr = props.patients.map(patient => patient.demographics.nativeLanguage);\n  const distinctLang = languagesArr.filter((lang, idx, self) => self.indexOf(lang) === idx);\n  const nativeLanguageData = distinctLang.map(lang => ({\n    label: lang,\n    value: calcPercent(languagesArr, lang)\n  })); // Data prep for age group pie chart\n\n  const ageArr = props.patients.map(patient => {\n    const today = new Date(Date.now());\n    const birth = new Date(patient.demographics.birthDate);\n    return today.getFullYear() - birth.getFullYear();\n  });\n  const ageGroupArr = ageArr.map(age => {\n    if (age < 20) return 10;\n    if (age >= 20 && age <= 29) return 20;\n    if (age >= 30 && age <= 39) return 30;\n    if (age >= 40 && age <= 49) return 40;\n    if (age >= 50 && age <= 59) return 50;\n    if (age >= 60) return 60;\n  });\n  const distinctAgeGroup = ageGroupArr.filter((age, idx, self) => self.indexOf(age) === idx);\n  const ageData = distinctAgeGroup.map(age => ({\n    label: age < 60 && age > 19 ? \"age \".concat(age, \"-\").concat(age + 9) : age >= 60 ? \"age \".concat(age, \"+\") : \"age < \".concat(20),\n    value: calcPercent(ageGroupArr, age)\n  })); //data prep for the studies bar graph\n\n  let studiesArr = props.patients.map(patient => patient.studies);\n  studiesArr = studiesArr.flat();\n  const distinctStudies = studiesArr.filter((study, idx, self) => self.indexOf(study) === idx);\n  const studiesData = distinctStudies.map(study => ({\n    label: study,\n    value: studiesArr.filter(el => el === study).length\n  }));\n  console.log(studiesArr.filter(el => el === 'pain').length);\n\n  function render() {\n    if (props.patients.length) {\n      return React.createElement(\"div\", {\n        className: \"dashboard-items-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard-item-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(DemographicsPercentBarGraph, {\n        patients: props.patients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dashboard-item-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        patients: props.patients,\n        title: \"Native Language\",\n        classSelector: \"language\",\n        data: nativeLanguageData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dashboard-item-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        patients: props.patients,\n        title: \"Age Group\",\n        classSelector: \"age\",\n        data: ageData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dashboard-item-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(RadarChart, {\n        patients: props.patients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dashboard-item-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(BarGraph, {\n        patients: props.patients,\n        data: studiesData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })));\n    } else {\n      return null;\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dashboard-page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Statistics Dashboard\"), render());\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/components/Dashboard/dashboard.js"],"names":["React","useState","useEffect","d3","DemographicsPercentBarGraph","PieChart","RadarChart","BarGraph","fetchPatient","Dashboard","props","fetchPatients","total","patients","length","calcPercent","arr","item","filter","el","languagesArr","map","patient","demographics","nativeLanguage","distinctLang","lang","idx","self","indexOf","nativeLanguageData","label","value","ageArr","today","Date","now","birth","birthDate","getFullYear","ageGroupArr","age","distinctAgeGroup","ageData","studiesArr","studies","flat","distinctStudies","study","studiesData","console","log","render"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport * as d3 from 'd3';\nimport '../../css/deethree.scss';\nimport DemographicsPercentBarGraph from './demographics_percent_bar_graph';\nimport PieChart from './pie_chart';\nimport RadarChart from './radar_chart';\nimport BarGraph from './bar_graph';\nimport { fetchPatient } from '../../actions/patient_actions';\n\nfunction Dashboard(props) {\n\n    \n    useEffect(() => {\n        props.fetchPatients();\n    }, []);\n\n    const total = props.patients.length;\n    function calcPercent(arr, item) {\n        return arr.filter(el => el === item).length/total;\n    }\n    // Data prep for native langugage pie chart\n    const languagesArr = props.patients.map(patient => patient.demographics.nativeLanguage);\n    const distinctLang = languagesArr.filter((lang, idx, self) => self.indexOf(lang) === idx);\n    const nativeLanguageData = distinctLang.map(lang => ({label: lang, value: calcPercent(languagesArr, lang)}));\n\n    // Data prep for age group pie chart\n    const ageArr = props.patients.map(patient => {\n        const today = new Date(Date.now());\n        const birth = new Date(patient.demographics.birthDate);\n        return today.getFullYear() - birth.getFullYear();\n    });\n    const ageGroupArr = ageArr.map(age => {\n        if (age < 20) return 10;\n        if (age >= 20 && age <= 29) return 20;\n        if (age >= 30 && age <= 39) return 30;\n        if (age >= 40 && age <= 49) return 40;\n        if (age >= 50 && age <= 59) return 50;\n        if (age >= 60) return 60;\n    });\n    const distinctAgeGroup = ageGroupArr.filter((age, idx, self) => self.indexOf(age) === idx);\n    const ageData = distinctAgeGroup.map(age => ({ label:(age < 60 && age > 19) ? `age ${age}-${age+9}` : (age >= 60) ? `age ${age}+` : `age < ${20}`, value: calcPercent(ageGroupArr, age) }));\n\n    //data prep for the studies bar graph\n    let studiesArr = props.patients.map(patient => patient.studies);\n\n    studiesArr = studiesArr.flat();\n    const distinctStudies = studiesArr.filter((study, idx, self) => self.indexOf(study) === idx);\n\n    const studiesData = distinctStudies.map(study => ({label: study, value: studiesArr.filter(el => el === study).length}));\n    console.log(studiesArr.filter(el => el === 'pain').length)\n\n    function render() {\n        if (props.patients.length) {\n            return (\n                <div className='dashboard-items-container'>\n                    <div className='dashboard-item-wrap'>\n                        <DemographicsPercentBarGraph \n                            patients={props.patients} />\n                    </div>\n\n                    <div className='dashboard-item-wrap'>\n                        <PieChart \n                            patients={props.patients} \n                            title='Native Language' \n                            classSelector='language'\n                            data={nativeLanguageData} />\n                    </div>\n\n                    <div className='dashboard-item-wrap'>\n                        <PieChart \n                            patients={props.patients} \n                            title='Age Group' \n                            classSelector='age'\n                            data={ageData} />\n                    </div>\n\n                    <div className='dashboard-item-wrap'>\n                        <RadarChart \n                            patients={props.patients} />\n                    </div>\n                    \n                    <div className='dashboard-item-wrap'>\n                        <BarGraph \n                        patients={props.patients} \n                        data={studiesData} />\n                    </div>\n                </div>\n            );\n\n        } else {\n            return null;\n        }\n    }\n    return (\n        <div>\n            <div className='dashboard-page-title'>Statistics Dashboard</div>\n           {render()}\n        </div>\n    );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}