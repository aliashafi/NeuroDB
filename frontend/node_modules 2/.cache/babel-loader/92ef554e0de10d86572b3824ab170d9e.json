{"ast":null,"code":"import { RECEIVE_TASKS, RECEIVE_TASK, RECEIVE_NEW_TASK, DELETE_TASK } from '../actions/task_actions';\n\nconst taskReducer = (state = {}, action) => {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case RECEIVE_TASKS:\n      let newState = {};\n      action.tasks.data.forEach(task => newState[task._id] = task);\n      return newState;\n\n    case RECEIVE_TASK:\n      return Object.assign({}, state, {\n        [action.task.data._id]: action.task.data\n      });\n\n    case RECEIVE_NEW_TASK:\n      newState = {};\n      action.patient.tasks.map(task => newState[task._id] = task);\n      return newState;\n\n    case DELETE_TASK:\n      newState = Object.assign({}, state);\n      delete newState[action.taskId];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/reducers/task_reducer.js"],"names":["RECEIVE_TASKS","RECEIVE_TASK","RECEIVE_NEW_TASK","DELETE_TASK","taskReducer","state","action","Object","freeze","type","newState","tasks","data","forEach","task","_id","assign","patient","map","taskId"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,gBAAtC,EAAwDC,WAAxD,QAA2E,yBAA3E;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxCC,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd;;AAEA,UAAOC,MAAM,CAACG,IAAd;AACI,SAAKT,aAAL;AACI,UAAIU,QAAQ,GAAG,EAAf;AACAJ,MAAAA,MAAM,CAACK,KAAP,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAAI,IAAKJ,QAAQ,CAACI,IAAI,CAACC,GAAN,CAAR,GAAqBD,IAAxD;AACA,aAAOJ,QAAP;;AACJ,SAAKT,YAAL;AACI,aAAOM,MAAM,CAACS,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAAE,SAACC,MAAM,CAACQ,IAAP,CAAYF,IAAZ,CAAiBG,GAAlB,GAAwBT,MAAM,CAACQ,IAAP,CAAYF;AAAtC,OAAzB,CAAP;;AACJ,SAAKV,gBAAL;AACIQ,MAAAA,QAAQ,GAAG,EAAX;AACAJ,MAAAA,MAAM,CAACW,OAAP,CAAeN,KAAf,CAAqBO,GAArB,CAAyBJ,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,GAAN,CAAR,GAAqBD,IAAtD;AACA,aAAOJ,QAAP;;AACJ,SAAKP,WAAL;AACIO,MAAAA,QAAQ,GAAGH,MAAM,CAACS,MAAP,CAAc,EAAd,EAAkBX,KAAlB,CAAX;AACA,aAAOK,QAAQ,CAACJ,MAAM,CAACa,MAAR,CAAf;AACA,aAAOT,QAAP;;AAEJ;AACI,aAAOL,KAAP;AAjBR;AAmBH,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import { RECEIVE_TASKS, RECEIVE_TASK, RECEIVE_NEW_TASK, DELETE_TASK } from '../actions/task_actions';\n\nconst taskReducer = (state = {}, action) => {\n    Object.freeze(state);\n\n    switch(action.type) {\n        case RECEIVE_TASKS:\n            let newState = {};\n            action.tasks.data.forEach(task => (newState[task._id] = task));\n            return newState;\n        case RECEIVE_TASK: \n            return Object.assign({}, state, { [action.task.data._id]: action.task.data });\n        case RECEIVE_NEW_TASK:\n            newState = {};\n            action.patient.tasks.map(task => newState[task._id] = task);\n            return newState;\n        case DELETE_TASK:\n            newState = Object.assign({}, state);\n            delete newState[action.taskId];\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\nexport default taskReducer;"]},"metadata":{},"sourceType":"module"}