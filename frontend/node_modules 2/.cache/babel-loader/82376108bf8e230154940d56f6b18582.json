{"ast":null,"code":"import { RECEIVE_USERS, RECEIVE_USER, DELETE_USER, REMOVE_PENDING_USER, UPDATE_CURRENT_USER_PENDINGS } from \"../actions/user_actions\";\nimport { RECEIVE_CURRENT_USER } from \"../actions/session_actions\";\n\nconst UserReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let nextState = Object.assign({}, state);\n\n  switch (action.type) {\n    case RECEIVE_USERS:\n      action.users.data.forEach(user => nextState[user._id] = user);\n      return nextState;\n\n    case RECEIVE_CURRENT_USER:\n      // nextState[action.currentUser.id] = action.currentUser\n      return Object.assign({}, state, {\n        [action.currentUser._id]: action.currentUser\n      });\n\n    case RECEIVE_USER:\n      nextState[action.user.data._id] = action.user.data;\n      return nextState;\n\n    case DELETE_USER:\n      delete nextState[action.userId];\n      return nextState;\n\n    case REMOVE_PENDING_USER:\n      let pendUser = action.pendUser.data.email;\n      delete nextState[action.adminId].pendingUsers[pendUser];\n      return nextState;\n    // case UPDATE_CURRENT_USER_PENDINGS:\n    //     let pendUser2 = action.pendUserEmail;\n    //     debugger\n    //     delete nextState[action.adminId].pendingUsers[pendUser2];\n    //     return nextState;\n\n    default:\n      return state;\n  }\n};\n\nexport default UserReducer;","map":{"version":3,"sources":["/Users/aliashafi/Documents/AppAcademy/Projects/NeuroDB/frontend/src/reducers/users_reducer.js"],"names":["RECEIVE_USERS","RECEIVE_USER","DELETE_USER","REMOVE_PENDING_USER","UPDATE_CURRENT_USER_PENDINGS","RECEIVE_CURRENT_USER","UserReducer","state","action","Object","freeze","nextState","assign","type","users","data","forEach","user","_id","currentUser","userId","pendUser","email","adminId","pendingUsers"],"mappings":"AAAA,SACIA,aADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,mBAJJ,EAKIC,4BALJ,QAMO,yBANP;AAOA,SAAQC,oBAAR,QAAmC,4BAAnC;;AAGA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACtCC,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd;AACA,MAAII,SAAS,GAAGF,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAhB;;AAEA,UAAOC,MAAM,CAACK,IAAd;AACI,SAAKb,aAAL;AACIQ,MAAAA,MAAM,CAACM,KAAP,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAAI,IAAKN,SAAS,CAACM,IAAI,CAACC,GAAN,CAAT,GAAsBD,IAAzD;AACA,aAAON,SAAP;;AACJ,SAAKN,oBAAL;AACI;AACA,aAAOI,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAC,SAACC,MAAM,CAACW,WAAP,CAAmBD,GAApB,GAA0BV,MAAM,CAACW;AAAlC,OAAzB,CAAP;;AACJ,SAAKlB,YAAL;AACIU,MAAAA,SAAS,CAACH,MAAM,CAACS,IAAP,CAAYF,IAAZ,CAAiBG,GAAlB,CAAT,GAAkCV,MAAM,CAACS,IAAP,CAAYF,IAA9C;AACA,aAAOJ,SAAP;;AACJ,SAAKT,WAAL;AACI,aAAOS,SAAS,CAACH,MAAM,CAACY,MAAR,CAAhB;AACA,aAAOT,SAAP;;AACJ,SAAKR,mBAAL;AACI,UAAIkB,QAAQ,GAAGb,MAAM,CAACa,QAAP,CAAgBN,IAAhB,CAAqBO,KAApC;AACA,aAAOX,SAAS,CAACH,MAAM,CAACe,OAAR,CAAT,CAA0BC,YAA1B,CAAuCH,QAAvC,CAAP;AACA,aAAOV,SAAP;AAEJ;AAEA;AACA;AACA;AACA;;AAEA;AACI,aAAOJ,KAAP;AA1BR;AA4BH,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import {\n    RECEIVE_USERS,\n    RECEIVE_USER,\n    DELETE_USER,\n    REMOVE_PENDING_USER,\n    UPDATE_CURRENT_USER_PENDINGS\n} from \"../actions/user_actions\";\nimport {RECEIVE_CURRENT_USER} from \"../actions/session_actions\";\n\n\nconst UserReducer = (state={}, action) => {\n    Object.freeze(state);\n    let nextState = Object.assign({}, state);\n\n    switch(action.type) {\n        case RECEIVE_USERS:\n            action.users.data.forEach(user => (nextState[user._id] = user))\n            return nextState;\n        case RECEIVE_CURRENT_USER:\n            // nextState[action.currentUser.id] = action.currentUser\n            return Object.assign({}, state, {[action.currentUser._id]: action.currentUser})\n        case RECEIVE_USER:\n            nextState[action.user.data._id] = action.user.data\n            return nextState;\n        case DELETE_USER:\n            delete nextState[action.userId]\n            return nextState;\n        case REMOVE_PENDING_USER:\n            let pendUser = action.pendUser.data.email\n            delete nextState[action.adminId].pendingUsers[pendUser];\n            return nextState;\n\n        // case UPDATE_CURRENT_USER_PENDINGS:\n\n        //     let pendUser2 = action.pendUserEmail;\n        //     debugger\n        //     delete nextState[action.adminId].pendingUsers[pendUser2];\n        //     return nextState;\n\n        default:\n            return state;\n    }\n}\n\nexport default UserReducer;"]},"metadata":{},"sourceType":"module"}